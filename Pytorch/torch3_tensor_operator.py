import torch

'''
특이값 분해
특이값 분해(SVD)는 선형 대수에서 자주 사용되는 계산으로 행렬 A를 USV처럼
세 행렬의 곱으로 분해하는 계산이다. U와 V는 직교행렬이고 S는 대각 성분만
정방형인 행렬이다. 최소제곱법(least square method)을 구할 때나 행렬 근사
(matrix approximation), 압축 등에 사용
'''
# 길이 3인 벡터
v = torch.tensor([1,2,3.])
w = torch.tensor([0,10,20.])

# 2 x 3인 행렬
m = torch.tensor([[0, 1, 2], [100, 200, 300]])

# 벡터와 스칼라의 덧셈
v2 = v + 10
print(v2)           # tensor([11., 12., 13.])
# 제곱도 같은 방식
v2 = v ** 2
print(v2)           # tensor([1., 4., 9.])

# 동일 길이의 벡터 간 뺄셈
z = v - w
print(z)            # tensor([  1.,  -8., -17.])

# 여러 가지 조합
u = 2 * v - w / 10 + 6.0
print(u)            # ([ 8.,  9., 10.])

# 행렬과 스칼라
m2 = m * 2.0
print(m2)           # tensor([[  0.,   2.,   4.], [200., 400., 600.]])

# 행렬과 벡터
# (2, 3)인 행렬과 (3,)인 벡터이므로 브로드 캐스트가 작동
m3 = m + v
print(m3)           # tensor([[  1.,   3.,   5.], [101., 202., 303.]])

'''
브로드 캐스트
브로드캐스팅은 어떤 조건만 만족한다면 모양이 다른 배열끼리의 연산도 가능하게 해주며 모양이 부족한 부분은 확장하여 
연산을 수행할 수 있도록 한다는 것이라고 생각할 수 있다. 확장 또는 전파한다는 의미로 Broadcasting을 설명하는 가장 
간단한 예는 배열과 스칼라 값을 계산하는 것이다. 스칼라는 일반 상수를 생각하면 된다.
'''
# 행렬간 처리
m4 = m + m
print(m4)           # tensor([[  0,   2,   4],[200, 400, 600]])